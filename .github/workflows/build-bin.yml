name: Release build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtalloc-dev
        
    - name: Build the project
      run: |
        make -C src loader.elf loader-m32.elf build.h
        make -C src proot
        
    - name: Run the test suite
      run: make -C test
      if: false

    - name: Create a package
      run: |
        mv src/proot ./proot
        tar -zcvf ./proot.tar.gz proot
        ls -lhrt

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: proot.tar.gz

  buildf:
    runs-on: ubuntu-20.04
    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtalloc-dev
        
    - name: Build the project
      run: |
        make -C src loader.elf loader-m32.elf build.h
        make -C src proot
        
    - name: Run the test suite
      run: make -C test
      if: false

    - name: Create a package
      run: |
        mv src/proot ./proot
        tar -zcvf ./proot-focal.tar.gz proot
        ls -lhrt

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: proot-focal.tar.gz

  release:
    needs: 
      - build
      - buildf
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURRENT_DATE: ${{ github.event.push.timestamp }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./proot.tar.gz
          asset_name: proot.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Focal
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./proot-focal.tar.gz
          asset_name: proot-focal.tar.gz
          asset_content_type: application/octet-stream
      